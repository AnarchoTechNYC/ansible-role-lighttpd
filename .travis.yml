---
language: minimal

env:
  - docker_repo: raspbian/stretch
  - docker_repo: raspbian/jessie
  - docker_repo: geerlingguy/docker-debian9-ansible
  - docker_repo: geerlingguy/docker-debian8-ansible
  - docker_repo: geerlingguy/docker-centos7-ansible
  - docker_repo: geerlingguy/docker-fedora27-ansible
  - docker_repo: geerlingguy/docker-ubuntu1804-ansible
  - docker_repo: geerlingguy/docker-ubuntu1604-ansible

matrix:
  # TODO: Fix these failures?
  allow_failures:
    - env: docker_repo=geerlingguy/docker-centos7-ansible
    - env: docker_repo=geerlingguy/docker-fedora27-ansible
    - env: docker_repo=geerlingguy/docker-ubuntu1604-ansible

install:
  - docker pull ${docker_repo}
  - container_id=$(mktemp)
  - >
    docker run --detach --privileged
    --volume /sys/fs/cgroup:/sys/fs/cgroup:ro
    --volume ${PWD}:/etc/ansible/roles/ansible-role-lighttpd:ro
    --publish 80:80
    ${docker_repo}:latest > ${container_id}

  # Bootstrap to ensure Ansible is available in the container.
  - >
    docker exec --tty $(cat ${container_id}) env TERM=xterm
    "ansible --version"

script:
  # Check Ansible role/playbook syntax.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook --syntax-check /etc/ansible/roles/ansible-role-lighttpd/tests/test.yml

  # Ensure the role/playbook runs without errors or failures.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook /etc/ansible/roles/ansible-role-lighttpd/tests/test.yml

  # Run the role/playbook again to test idempotence.
  - idempotence=$(mktemp)
  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook /etc/ansible/roles/ansible-role-lighttpd/tests/test.yml
    | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  - curl http://localhost/

after_script:
  - docker rm -f "$(cat ${container_id})"
